{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.2b67e41bcbcad434d6c4.hot-update.js","sources":["webpack:///./src/Player.tsx"],"sourcesContent":["import { Locale } from '@/Locale';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React, { memo, useState } from 'react';\r\nimport Track from '@/Player/Track';\r\nimport { PlayerProps } from '@/Player/types';\r\n\r\n/** seek back in 5 sec by LeftArrow key pressing  */\r\nconst STEP = 5;\r\nconst LEFT_ARROW_KEYCODE = 37;\r\nconst useStyles = makeStyles({\r\n  videoClass: { width: '100%', background: 'transparent' },\r\n});\r\n\r\nlet timestamp: number = 0;\r\n\r\nexport default memo<PlayerProps>((props) => {\r\n  const { videoClass } = useStyles();\r\n  const videoRef = React.createRef<HTMLVideoElement>();\r\n  const videoLocale = (/\\[(.*)\\]/.exec(props.root) || [null]).pop() as Locale;\r\n  const allowSecSub = props.locale !== videoLocale;\r\n  if (!videoLocale) { throw new Error(`Video locale is not defined! ${props.root}`); }\r\n\r\n  const [isPrimSubVisible, visiblePrimSub] = useState<boolean>(false);\r\n  const [isSecSubVisible, visibleSecSub] = useState<boolean>(false);\r\n\r\n  function onSeeked(): void {\r\n    if (!videoRef.current || timestamp < videoRef.current.currentTime) {\r\n      return;\r\n    }\r\n    if (isPrimSubVisible &&  allowSecSub) {\r\n      !isSecSubVisible && visibleSecSub(true);\r\n      return;\r\n    }\r\n    !isPrimSubVisible && visiblePrimSub(true);\r\n  }\r\n\r\n  function onTimeUpdate() {\r\n    if (!videoRef.current || timestamp > videoRef.current.currentTime) {\r\n      return;\r\n    }\r\n    timestamp = videoRef.current.currentTime;\r\n    isPrimSubVisible && visiblePrimSub(false);\r\n    isSecSubVisible && visibleSecSub(false);\r\n  }\r\n\r\n  const onError = () => { videoRef.current && console.error(videoRef.current.error); }\r\n  return (\r\n    <video\r\n      preload=\"auto\"\r\n      ref={videoRef}\r\n      controls={true}\r\n      autoPlay={true}\r\n      onSeeked={onSeeked}\r\n      className={videoClass}\r\n      onError={onError}\r\n      onTimeUpdate={onTimeUpdate} >\r\n\r\n      <source src={`${props.root}/video.mp4`} type=\"video/mp4\" />\r\n\r\n      <Track visible={isPrimSubVisible} root={props.root} locale={videoLocale} />\r\n      <Track visible={isSecSubVisible} root={props.root} locale={props.locale} />}\r\n\r\n      Sorry, your browser doesn't support embedded videos.\r\n  </video >\r\n  );\r\n});\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAIA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}